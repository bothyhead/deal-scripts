#
# useful functions 
#
# 24.Mar.2013
#

source lib/utility.tcl

# the sum of the two longest suits
patternfunc TwoLongest {
  return [expr {$l1 + $l2}]
}

# the length of the shortest suit
patternfunc ShortSuitLength {
  return $l4
}

# the length of the longest suit
patternfunc LongSuitLength {
  return $l1
}

# the length of the longest major
shapefunc MajorSuitLength {

  if {$s > $h} {
    return $s
  } else {
    return $h
  }

}

# the length of the longer minor
shapefunc MinorSuitLength {

  if {$d > $c} {
    return $d
  } else {
    return $c
  }

}

# rule of 20
proc RuleOf20 {hand} {
  set p [hcp $hand]
  if {$p >= 12} {return 1}
  if {($p + [TwoLongest $hand]) >= 20 } {return 1}
  return 0
}

# suit quality test for overcalls
holdingProc SuitQuality {len A K Q J T} {
  set HigherHonors [expr {$A+$K+$Q+$J}]
  set Quality [expr {$len + $HigherHonors}]
  if {$T && ($HigherHonors >= 2)} {incr Quality}
  return $Quality
}

# top honours
holdingProc TopHonours {len A K Q J} {
  set NumberOfHonours [expr {$A+$K+$Q+$J}]
  return $NumberOfHonours
}
 
# return the number of playing tricks
# calculated as (13 - loosers - 1)
proc PlayingTricks {hand} {
  return [expr {13 - ([losers $hand] / 2) - 1}]
}

# four card major
shapefunc FourCardMajor {
  if {$s == 4 || $h == 4} {return 1}
  return 0
}

# 5/4 distribution (not including 5440)
patternfunc FiveFour {
  if {($l1 == 5) && ($l2 == 4) && ($l3 < 4)} {return 1}
  return 0
}

# quick tricks
holdingProc -double QuickTricks {A K Q J T length} {

# A   1
# AK  1
# AQ  1.5
# KQ  1
# Kx  0.5

  if {$A && $K} {return 2}
  if {$A} {return 1}
  if {$K && $Q} {return 1}
  if {$K && $length>1} {return 0.5}
  return 0
}




