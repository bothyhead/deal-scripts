#
# useful functions 
#
# 24.Mar.2013
#

source lib/utility.tcl

# the sum of the two longest suits
patternfunc TwoLongest {
  return $l1 + $l2
}

# the length of the shortest suit
patternfunc ShortSuitLength {
  return $l4
}

# rule of 20
proc RuleOf20 {hand} {

  set p [hcp $hand]

  if {$p >= 12} {return 1}
  if {($p + [TwoLongest $hand]) >= 20 } {return 1}

  return 0

}

# suit quality test for overcalls
holdingProc SuitQuality {len A K Q J T} {

   set HigherHonors [expr {$A+$K+$Q+$J}]

   set Quality [expr {$len + $HigherHonors}]

   if {$T && ($HigherHonors >= 2)} {incr Quality}

   return $Quality
}
 
# return the number of playing tricks
# calculated as (13 - loosers - 1)
proc PlayingTricks {hand} {
  return [expr {13 - ([losers $hand] / 2) - 1}]
}

# four card major
shapefunc FourCardMajor {
  if {$s == 4 || $h == 4} {return 1}
  return 0
}

